* Tasks
** [x] v0.0.1: Simple text scraper
** [x] v0.0.1: Enable for all sites
** [x] v0.0.1: On each page load, send scraped text to flask api
** [x] v0.0.1: UI: Search for websites
** [x] v0.0.2: UI: Beautify the UI, Show keywords cleanly, show search button, results cleanly etc
** [x] v0.0.2: UI: Show results with numbering, make it clickable etc
** [x] v0.0.2: SR: Remove the load and save to outside, should save before crash/exit
** [ ] v0.0.x: SR: AtExit does not seem to work if you: trap signals:
         https://stackoverflow.com/questions/40866576/run-atexit-when-python-process-is-killed)
** [ ] v0.0.x: AL: Add 1000 urls, save both train and test data as embeddings, test code
** [ ] v0.0.x: AL: Metrics: Top 5 Errors, Multicategory error 
** [ ] v0.0.x: AL: Error characterization for 100 test urls
** [ ] v0.0.x: AL: Refactor search, separate function to handle search with embedding
** [ ] v0.0.x: AL:
** [ ] v0.0.x: SR: Store and send back page title
** [ ] v0.0.x: UI: Save the page title, show page title as description
** [ ] v0.0.x: UI: Move from popup to a full page plugin
** [ ] v0.0.x: UI: HistoryExport Button + History export to API
** [ ] v0.0.x: UI: TabManager Export Button + Tab manager export to API
** [ ] v0.0.x: SR: Remove duplicate URLS
** [ ] v0.0.x: UI: Send datetime as well
** [ ] v0.0.x: SR: Store datetime and return with datetime
** [ ] v0.0.x: Common site specific parsers, to clean input (reddit, hnews, Goog etc)
** [ ] v0.0.x: AL: Testing the result quality
** [ ] v0.0.x: AL:
